Metadata-Version: 2.1
Name: my_package
Version: 0.0.1
Summary: Ornek bir Python paketi
Author-email: Zeynep Yildiz <zeynep@example.com>
License: Copyright (c) 2018 The Python Packaging Authority
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
License-File: LICENSE

## Python Paketi Nedir?
Belirli bir formatta sıkıştırılmış Python kodu demetleridir. Bu paketler, diğer insanlara dağıtılabilir ve pip gibi araçlarla kurulabilir.

https://packaging.python.org/en/latest/tutorials/packaging-projects/

## Örnek Paket Yapısı
```sh
my_package/
├── LICENSE
├── pyproject.toml
├── README.md
├── src/
│   └── my_package/
│       ├── __init__.py
│       └── example.py
│       └── sub_package/
│          ├── __init__.py
│          └── sub_module.py
├── tests/
│   ├── __init__.py
└── └── test_example.py
```
`my_package/`: Ana proje dizini.

`__init__.py`: Bu dosya Python’a bu dizinin bir paket olduğunu belirtir.

`example.py`: Paket içindeki bir modül.

`sub_package/`: Alt paket dizini.

`tests/`: Paketle ilgili testlerin bulunduğu dizin.

`test_example.py`: Modüle ait test dosyası.

`README.md`: Projenin genel bilgilerini sağlayan bir belgedir. 

`LICENSE`: Lisans bilgilerini içeren dosya. Lisans, kullanıcıların projeyi nasıl kullanabileceğini, değiştirebileceğini ve dağıtabileceğini tanımlar.

`pyproject.toml`: Proje yapılandırması ve bağımlılıklarını belirlemek için kullanılır.

  
## Bir Python Uygulamasının Paket Haline Getirilmesi
Python projelerini paylaşmanın ve başkalarının bu projeleri kolayca yükleyip kullanmasının en iyi yolu bir paket oluşturmak ve dağıtmaktır.

Öncelikle pip'in güncel olduğundan emin olmalıyız.
```sh
python3 -m pip install --upgrade pip
```

## Paketleme Araçlarını Kurma
Paketleme işlemi için `setuptools` ve `wheel` kurmamız gerek.
```sh
pip install setuptools wheel
```

## Paketi Oluşturma
build yüklü değilse
```sh
pip install build
```
Bu komut, dist/ dizininde paketleme dosyalarını oluşturur.
```sh
python3 -m build
```
Günümüzde iki ana Python paketi türü vardır:

1- Source Paketleri (.tar.gz): Kaynak kodun snapshot'ı ve ad, sürüm, özet, yazar gibi meta verileri içeren bir dosya içerir.

2- Wheel Paketleri (.whl): Egg formatının bir geliştirmesi olup, şu anda en çok önerilen formattır.

## Paketi Test Etme
Yeni bir projede paketin çalışıp çalışmadığını test etmek için paket yeni proje dizinine yüklenir.
```sh
pip install dist/my_package-0.0.1-py3-none-any.whl
pip install dist/my_package-0.0.1.tar.gz
```
Yeni bir Python dosyası oluşturulur ve test kodu yazılır. Eğer yine aynı çıktıyı alırsak, paket başarılı bir şekilde yüklenmiştir.
